{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "table",
  "type": "registry:ui",
  "title": "Table",
  "description": "A data table component with wireframe helpers for headers and cells.",
  "dependencies": [],
  "registryDependencies": ["text"],
  "files": [
    {
      "path": "registry/new-york/ui/table.tsx",
      "content": "'use client'\n\nimport * as React from 'react'\n\nimport { cn } from '@/lib/utils'\nimport { Text } from '@/registry/new-york/ui/text'\n\nexport interface TableProps extends React.ComponentProps<'table'> {}\n\nfunction Table({ className, ...props }: TableProps) {\n  return (\n    <div data-slot=\"table-container\" className=\"scrollbar-hide relative w-full overflow-x-auto\">\n      <table\n        data-slot=\"table\"\n        className={cn('w-full caption-bottom text-sm', className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nexport interface TableHeaderProps extends React.ComponentProps<'thead'> {}\n\nfunction TableHeader({ className, ...props }: TableHeaderProps) {\n  return <thead data-slot=\"table-header\" className={cn('[&_tr]:border-b', className)} {...props} />\n}\n\nexport interface TableBodyProps extends React.ComponentProps<'tbody'> {}\n\nfunction TableBody({ className, ...props }: TableBodyProps) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn('[&_tr:last-child]:border-0', className)}\n      {...props}\n    />\n  )\n}\n\nexport interface TableFooterProps extends React.ComponentProps<'tfoot'> {}\n\nfunction TableFooter({ className, ...props }: TableFooterProps) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn('bg-muted/50 border-t font-medium [&>tr]:last:border-b-0', className)}\n      {...props}\n    />\n  )\n}\n\nexport interface TableRowProps extends React.ComponentProps<'tr'> {}\n\nfunction TableRow({ className, ...props }: TableRowProps) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        'hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors',\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport interface TableHeadProps extends React.ComponentProps<'th'> {}\n\nfunction TableHead({ className, ...props }: TableHeadProps) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        'text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 *:[[role=checkbox]]:translate-y-[2px]',\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport interface TableCellProps extends React.ComponentProps<'td'> {}\n\nfunction TableCell({ className, ...props }: TableCellProps) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        'p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 *:[[role=checkbox]]:translate-y-[2px]',\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport interface TableCaptionProps extends React.ComponentProps<'caption'> {}\n\nfunction TableCaption({ className, ...props }: TableCaptionProps) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn('text-muted-foreground mt-4 text-sm', className)}\n      {...props}\n    />\n  )\n}\n\n// Wireframe helper component for table cells\nfunction TableCellWireframe({\n  width = 'md',\n  className,\n  ...props\n}: React.ComponentProps<'td'> & {\n  width?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'full'\n}) {\n  return (\n    <TableCell className={className} {...props}>\n      <Text width={width} />\n    </TableCell>\n  )\n}\n\n// Wireframe helper component for table headers\nfunction TableHeadWireframe({\n  width = 'sm',\n  className,\n  ...props\n}: React.ComponentProps<'th'> & {\n  width?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'full'\n}) {\n  return (\n    <TableHead className={className} {...props}>\n      <Text width={width} emphasis=\"secondary\" />\n    </TableHead>\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n  TableCellWireframe,\n  TableHeadWireframe,\n}\n",
      "type": "registry:ui"
    }
  ]
}
