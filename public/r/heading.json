{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "heading",
  "type": "registry:ui",
  "title": "Heading",
  "description": "A composition component that renders appropriately sized Text based on heading level (1-6).",
  "dependencies": [],
  "registryDependencies": ["text"],
  "files": [
    {
      "path": "registry/new-york/ui/heading.tsx",
      "content": "import * as React from 'react'\n\nimport { Text, type TextProps } from '@/registry/new-york/ui/text'\nimport { cn } from '@/lib/utils'\n\nexport interface HeadingProps extends Omit<TextProps, 'size' | 'width'> {\n  level?: 1 | 2 | 3 | 4 | 5 | 6\n  as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'div'\n}\n\nconst Heading = React.forwardRef<HTMLElement, HeadingProps>(\n  ({ level = 1, as, className, ...props }, ref) => {\n    // Map heading levels to appropriate text sizes\n    const sizeMap = {\n      1: 'xl' as const,\n      2: 'lg' as const,\n      3: 'lg' as const,\n      4: 'base' as const,\n      5: 'sm' as const,\n      6: 'sm' as const,\n    }\n\n    // Map heading levels to appropriate widths\n    const widthMap = {\n      1: 'lg' as const,\n      2: 'lg' as const,\n      3: 'md' as const,\n      4: 'md' as const,\n      5: 'sm' as const,\n      6: 'sm' as const,\n    }\n\n    // Use the 'as' prop if provided, otherwise default to the semantic heading tag\n    const Component = (as || `h${level}`) as React.ElementType\n\n    return (\n      <Component ref={ref} className={cn(className)}>\n        <Text size={sizeMap[level]} width={widthMap[level]} {...props} />\n      </Component>\n    )\n  }\n)\n\nHeading.displayName = 'Heading'\n\nexport { Heading }\n",
      "type": "registry:ui"
    }
  ]
}
