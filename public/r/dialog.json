{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dialog",
  "type": "registry:ui",
  "title": "Dialog",
  "description": "A modal dialog that interrupts the user with important content and expects a response.",
  "dependencies": ["@radix-ui/react-dialog"],
  "registryDependencies": ["icons"],
  "files": [
    {
      "path": "registry/new-york/ui/dialog.tsx",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport * as DialogPrimitive from '@radix-ui/react-dialog'\r\n\r\nimport { cn } from '@/lib/utils'\r\nimport { XIcon } from '@/registry/new-york/icons'\r\n\r\nexport interface DialogProps extends React.ComponentProps<typeof DialogPrimitive.Root> {}\r\n\r\nfunction Dialog({ ...props }: DialogProps) {\r\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\r\n}\r\n\r\nexport interface DialogTriggerProps extends React.ComponentProps<typeof DialogPrimitive.Trigger> {}\r\n\r\nfunction DialogTrigger({ ...props }: DialogTriggerProps) {\r\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\r\n}\r\n\r\nexport interface DialogPortalProps extends React.ComponentProps<typeof DialogPrimitive.Portal> {}\r\n\r\nfunction DialogPortal({ ...props }: DialogPortalProps) {\r\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\r\n}\r\n\r\nexport interface DialogCloseProps extends React.ComponentProps<typeof DialogPrimitive.Close> {}\r\n\r\nfunction DialogClose({ ...props }: DialogCloseProps) {\r\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\r\n}\r\n\r\nexport interface DialogOverlayProps extends React.ComponentProps<typeof DialogPrimitive.Overlay> {}\r\n\r\nfunction DialogOverlay({ className, ...props }: DialogOverlayProps) {\r\n  return (\r\n    <DialogPrimitive.Overlay\r\n      data-slot=\"dialog-overlay\"\r\n      className={cn(\r\n        'data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface DialogContentProps extends React.ComponentProps<typeof DialogPrimitive.Content> {\r\n  showCloseButton?: boolean\r\n}\r\n\r\nfunction DialogContent({\r\n  className,\r\n  children,\r\n  showCloseButton = true,\r\n  ...props\r\n}: DialogContentProps) {\r\n  return (\r\n    <DialogPortal data-slot=\"dialog-portal\">\r\n      <DialogOverlay />\r\n      <DialogPrimitive.Content\r\n        data-slot=\"dialog-content\"\r\n        className={cn(\r\n          'bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n        {showCloseButton && (\r\n          <DialogPrimitive.Close\r\n            data-slot=\"dialog-close\"\r\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\r\n          >\r\n            <XIcon />\r\n            <span className=\"sr-only\">Close</span>\r\n          </DialogPrimitive.Close>\r\n        )}\r\n      </DialogPrimitive.Content>\r\n    </DialogPortal>\r\n  )\r\n}\r\n\r\nexport interface DialogHeaderProps extends React.ComponentProps<'div'> {}\r\n\r\nfunction DialogHeader({ className, ...props }: DialogHeaderProps) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-header\"\r\n      className={cn('flex flex-col gap-2 text-center sm:text-left', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface DialogFooterProps extends React.ComponentProps<'div'> {}\r\n\r\nfunction DialogFooter({ className, ...props }: DialogFooterProps) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-footer\"\r\n      className={cn('flex flex-col-reverse gap-2 sm:flex-row sm:justify-end', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface DialogTitleProps extends React.ComponentProps<typeof DialogPrimitive.Title> {}\r\n\r\nfunction DialogTitle({ className, ...props }: DialogTitleProps) {\r\n  return (\r\n    <DialogPrimitive.Title\r\n      data-slot=\"dialog-title\"\r\n      className={cn('text-lg leading-none font-semibold', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface DialogDescriptionProps\r\n  extends React.ComponentProps<typeof DialogPrimitive.Description> {}\r\n\r\nfunction DialogDescription({ className, ...props }: DialogDescriptionProps) {\r\n  return (\r\n    <DialogPrimitive.Description\r\n      data-slot=\"dialog-description\"\r\n      className={cn('text-muted-foreground text-sm', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogOverlay,\r\n  DialogPortal,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n}\r\n",
      "type": "registry:ui"
    }
  ]
}
