{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "badge",
  "type": "registry:ui",
  "title": "Badge",
  "description": "Displays a badge or a component that looks like a badge with multiple variants.",
  "dependencies": ["@radix-ui/react-slot", "class-variance-authority", "@heroicons/react"],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/ui/badge.tsx",
      "content": "import * as React from 'react'\r\nimport { Slot } from '@radix-ui/react-slot'\r\nimport { cva, type VariantProps } from 'class-variance-authority'\r\nimport { CheckIcon } from '@heroicons/react/24/outline'\r\n\r\nimport { cn } from '@/lib/utils'\r\nimport { Text } from '@/registry/new-york/ui/text'\r\n\r\nconst badgeVariants = cva(\r\n  'inline-flex items-center justify-center rounded-full border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: 'bg-card text-foreground border-input [a&]:hover:bg-accent',\r\n        secondary:\r\n          'border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/80',\r\n        destructive:\r\n          'border-transparent bg-destructive text-destructive-foreground [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40',\r\n        outline:\r\n          'text-foreground border-input [a&]:hover:bg-accent [a&]:hover:text-accent-foreground',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.ComponentProps<'span'>,\r\n    VariantProps<typeof badgeVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nfunction Badge({ className, variant, asChild = false, ...props }: BadgeProps) {\r\n  const Comp = asChild ? Slot : 'span'\r\n\r\n  return <Comp data-slot=\"badge\" className={cn(badgeVariants({ variant }), className)} {...props} />\r\n}\r\n\r\n// Wireframe helper component\r\nexport interface BadgeWireframeProps\r\n  extends Omit<BadgeProps, 'children'>,\r\n    VariantProps<typeof badgeVariants> {\r\n  icon?: React.ReactNode\r\n  width?: 'xs' | 'sm' | 'md' | 'lg'\r\n}\r\n\r\nfunction BadgeWireframe({\r\n  variant = 'default',\r\n  icon,\r\n  width = 'xs',\r\n  className,\r\n  ...props\r\n}: BadgeWireframeProps) {\r\n  return (\r\n    <Badge variant={variant} className={className} {...props}>\r\n      {icon || <CheckIcon className=\"text-muted-foreground\" />}\r\n      <Text width={width} />\r\n    </Badge>\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants, BadgeWireframe }\r\n",
      "type": "registry:ui"
    }
  ]
}
