{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pagination",
  "type": "registry:ui",
  "title": "Pagination",
  "description": "Pagination with page navigation, next and previous links.",
  "dependencies": [],
  "registryDependencies": ["button", "icons"],
  "files": [
    {
      "path": "registry/new-york/ui/pagination.tsx",
      "content": "import * as React from 'react'\n\nimport { cn } from '@/lib/utils'\nimport { ChevronLeftIcon, ChevronRightIcon, WavesIcon } from '@/registry/new-york/icons'\nimport { Button, buttonVariants } from '@/registry/new-york/ui/button'\n\nexport interface PaginationProps extends React.ComponentProps<'nav'> {}\n\nfunction Pagination({ className, ...props }: PaginationProps) {\n  return (\n    <nav\n      role=\"navigation\"\n      aria-label=\"pagination\"\n      data-slot=\"pagination\"\n      className={cn('mx-auto flex w-full justify-center', className)}\n      {...props}\n    />\n  )\n}\n\nexport interface PaginationContentProps extends React.ComponentProps<'ul'> {}\n\nfunction PaginationContent({ className, ...props }: PaginationContentProps) {\n  return (\n    <ul\n      data-slot=\"pagination-content\"\n      className={cn('flex flex-row items-center gap-1', className)}\n      {...props}\n    />\n  )\n}\n\nexport interface PaginationItemProps extends React.ComponentProps<'li'> {}\n\nfunction PaginationItem({ ...props }: PaginationItemProps) {\n  return <li data-slot=\"pagination-item\" {...props} />\n}\n\nexport type PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<React.ComponentProps<typeof Button>, 'size'> &\n  React.ComponentProps<'a'>\n\nfunction PaginationLink({ className, isActive, size = 'icon', ...props }: PaginationLinkProps) {\n  return (\n    <a\n      aria-current={isActive ? 'page' : undefined}\n      data-slot=\"pagination-link\"\n      data-active={isActive}\n      className={cn(\n        buttonVariants({\n          variant: isActive ? 'outline' : 'ghost',\n          size,\n        }),\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport interface PaginationPreviousProps extends React.ComponentProps<typeof PaginationLink> {}\n\nfunction PaginationPrevious({ className, children, ...props }: PaginationPreviousProps) {\n  return (\n    <PaginationLink\n      aria-label=\"Go to previous page\"\n      size=\"default\"\n      className={cn('gap-1 px-2.5 sm:pl-2.5', className)}\n      {...props}\n    >\n      <ChevronLeftIcon className=\"text-muted-foreground\" />\n      {children || <span className=\"hidden sm:block\">Previous</span>}\n    </PaginationLink>\n  )\n}\n\nexport interface PaginationNextProps extends React.ComponentProps<typeof PaginationLink> {}\n\nfunction PaginationNext({ className, children, ...props }: PaginationNextProps) {\n  return (\n    <PaginationLink\n      aria-label=\"Go to next page\"\n      size=\"default\"\n      className={cn('gap-1 px-2.5 sm:pr-2.5', className)}\n      {...props}\n    >\n      {children || <span className=\"hidden sm:block\">Next</span>}\n      <ChevronRightIcon className=\"text-muted-foreground\" />\n    </PaginationLink>\n  )\n}\n\nexport interface PaginationEllipsisProps extends React.ComponentProps<'span'> {}\n\nfunction PaginationEllipsis({ className, ...props }: PaginationEllipsisProps) {\n  return (\n    <span\n      aria-hidden\n      data-slot=\"pagination-ellipsis\"\n      className={cn('flex size-9 items-center justify-center', className)}\n      {...props}\n    >\n      <WavesIcon size={16} className=\"text-muted-foreground\" />\n      <span className=\"sr-only\">More pages</span>\n    </span>\n  )\n}\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationLink,\n  PaginationItem,\n  PaginationPrevious,\n  PaginationNext,\n  PaginationEllipsis,\n}\n",
      "type": "registry:ui"
    }
  ]
}
