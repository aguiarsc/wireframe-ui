{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pagination",
  "type": "registry:ui",
  "title": "Pagination",
  "description": "Pagination with page navigation, next and previous links.",
  "dependencies": [
    "@heroicons/react"
  ],
  "registryDependencies": [
    "button"
  ],
  "files": [
    {
      "path": "registry/new-york/ui/pagination.tsx",
      "content": "import * as React from 'react'\r\n\r\nimport { cn } from '@/lib/utils'\r\nimport { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/24/outline'\r\nimport { EllipsisHorizontalIcon } from '@heroicons/react/24/outline'\r\nimport { Button, buttonVariants } from '@/registry/new-york/ui/button'\r\n\r\nexport interface PaginationProps extends React.ComponentProps<'nav'> {}\r\n\r\nfunction Pagination({ className, ...props }: PaginationProps) {\r\n  return (\r\n    <nav\r\n      role=\"navigation\"\r\n      aria-label=\"pagination\"\r\n      data-slot=\"pagination\"\r\n      className={cn('mx-auto flex w-full justify-center', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface PaginationContentProps extends React.ComponentProps<'ul'> {}\r\n\r\nfunction PaginationContent({ className, ...props }: PaginationContentProps) {\r\n  return (\r\n    <ul\r\n      data-slot=\"pagination-content\"\r\n      className={cn('flex flex-row items-center gap-1', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface PaginationItemProps extends React.ComponentProps<'li'> {}\r\n\r\nfunction PaginationItem({ ...props }: PaginationItemProps) {\r\n  return <li data-slot=\"pagination-item\" {...props} />\r\n}\r\n\r\nexport type PaginationLinkProps = {\r\n  isActive?: boolean\r\n} & Pick<React.ComponentProps<typeof Button>, 'size'> &\r\n  React.ComponentProps<'a'>\r\n\r\nfunction PaginationLink({ className, isActive, size = 'icon', ...props }: PaginationLinkProps) {\r\n  return (\r\n    <a\r\n      aria-current={isActive ? 'page' : undefined}\r\n      data-slot=\"pagination-link\"\r\n      data-active={isActive}\r\n      className={cn(\r\n        buttonVariants({\r\n          variant: isActive ? 'outline' : 'ghost',\r\n          size,\r\n        }),\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface PaginationPreviousProps extends React.ComponentProps<typeof PaginationLink> {}\r\n\r\nfunction PaginationPrevious({ className, children, ...props }: PaginationPreviousProps) {\r\n  return (\r\n    <PaginationLink\r\n      aria-label=\"Go to previous page\"\r\n      size=\"default\"\r\n      className={cn('gap-1 px-3 sm:pl-3', className)}\r\n      {...props}\r\n    >\r\n      <ChevronLeftIcon className=\"text-muted-foreground\" />\r\n      {children || <span className=\"hidden sm:block\">Previous</span>}\r\n    </PaginationLink>\r\n  )\r\n}\r\n\r\nexport interface PaginationNextProps extends React.ComponentProps<typeof PaginationLink> {}\r\n\r\nfunction PaginationNext({ className, children, ...props }: PaginationNextProps) {\r\n  return (\r\n    <PaginationLink\r\n      aria-label=\"Go to next page\"\r\n      size=\"default\"\r\n      className={cn('gap-1 px-3 sm:pr-3', className)}\r\n      {...props}\r\n    >\r\n      {children || <span className=\"hidden sm:block\">Next</span>}\r\n      <ChevronRightIcon className=\"text-muted-foreground\" />\r\n    </PaginationLink>\r\n  )\r\n}\r\n\r\nexport interface PaginationEllipsisProps extends React.ComponentProps<'span'> {}\r\n\r\nfunction PaginationEllipsis({ className, ...props }: PaginationEllipsisProps) {\r\n  return (\r\n    <span\r\n      aria-hidden\r\n      data-slot=\"pagination-ellipsis\"\r\n      className={cn('flex size-7 items-center justify-center', className)}\r\n      {...props}\r\n    >\r\n      <EllipsisHorizontalIcon className=\"text-muted-foreground\" />\r\n      <span className=\"sr-only\">More pages</span>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport {\r\n  Pagination,\r\n  PaginationContent,\r\n  PaginationLink,\r\n  PaginationItem,\r\n  PaginationPrevious,\r\n  PaginationNext,\r\n  PaginationEllipsis,\r\n}\r\n",
      "type": "registry:ui"
    }
  ]
}