{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "input-group",
  "type": "registry:ui",
  "title": "Input Group",
  "description": "An input group component for combining inputs with addons and buttons.",
  "dependencies": ["class-variance-authority"],
  "registryDependencies": ["button", "input", "textarea", "icons"],
  "files": [
    {
      "path": "registry/new-york/ui/input-group.tsx",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport { cva, type VariantProps } from 'class-variance-authority'\r\n\r\nimport { cn } from '@/lib/utils'\r\nimport { Button } from '@/registry/new-york/ui/button'\r\nimport { Input } from '@/registry/new-york/ui/input'\r\nimport { Textarea } from '@/registry/new-york/ui/textarea'\r\n\r\nexport interface InputGroupProps extends React.ComponentProps<'div'> {}\r\n\r\nfunction InputGroup({ className, ...props }: InputGroupProps) {\r\n  return (\r\n    <div\r\n      data-slot=\"input-group\"\r\n      role=\"group\"\r\n      className={cn(\r\n        'group/input-group border-input dark:bg-input/30 relative flex w-full items-center rounded-md border shadow-xs transition-[color,box-shadow] outline-none',\r\n        'h-9 min-w-0 has-[>textarea]:h-auto',\r\n\r\n        // Variants based on alignment.\r\n        'has-[>[data-align=inline-start]]:[&>input]:pl-2',\r\n        'has-[>[data-align=inline-end]]:[&>input]:pr-2',\r\n        'has-[>[data-align=block-start]]:h-auto has-[>[data-align=block-start]]:flex-col has-[>[data-align=block-start]]:[&>input]:pb-3',\r\n        'has-[>[data-align=block-end]]:h-auto has-[>[data-align=block-end]]:flex-col has-[>[data-align=block-end]]:[&>input]:pt-3',\r\n\r\n        // Focus state.\r\n        'has-[[data-slot=input-group-control]:focus-visible]:border-ring has-[[data-slot=input-group-control]:focus-visible]:ring-ring/50 has-[[data-slot=input-group-control]:focus-visible]:ring-[3px]',\r\n\r\n        // Error state.\r\n        'has-[[data-slot][aria-invalid=true]]:ring-destructive/20 has-[[data-slot][aria-invalid=true]]:border-destructive dark:has-[[data-slot][aria-invalid=true]]:ring-destructive/40',\r\n\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nconst inputGroupAddonVariants = cva(\r\n  \"text-muted-foreground flex h-auto cursor-text items-center justify-center gap-2 py-2 text-sm font-medium select-none [&>svg:not([class*='size-'])]:size-4 [&>kbd]:rounded-[calc(var(--radius)-5px)] group-data-[disabled=true]/input-group:opacity-50\",\r\n  {\r\n    variants: {\r\n      align: {\r\n        'inline-start': 'order-first pl-3 has-[>button]:ml-[-0.45rem] has-[>kbd]:ml-[-0.35rem]',\r\n        'inline-end': 'order-last pr-3 has-[>button]:mr-[-0.45rem] has-[>kbd]:mr-[-0.35rem]',\r\n        'block-start':\r\n          'order-first w-full justify-start px-3 pt-3 [.border-b]:pb-3 group-has-[>input]/input-group:pt-3',\r\n        'block-end':\r\n          'order-last w-full justify-start px-3 pb-3 [.border-t]:pt-3 group-has-[>input]/input-group:pb-3',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      align: 'inline-start',\r\n    },\r\n  }\r\n)\r\n\r\nexport interface InputGroupAddonProps\r\n  extends React.ComponentProps<'div'>,\r\n    VariantProps<typeof inputGroupAddonVariants> {}\r\n\r\nfunction InputGroupAddon({ className, align = 'inline-start', ...props }: InputGroupAddonProps) {\r\n  return (\r\n    <div\r\n      role=\"group\"\r\n      data-slot=\"input-group-addon\"\r\n      data-align={align}\r\n      className={cn(inputGroupAddonVariants({ align }), className)}\r\n      onClick={(e) => {\r\n        if ((e.target as HTMLElement).closest('button')) {\r\n          return\r\n        }\r\n        e.currentTarget.parentElement?.querySelector('input')?.focus()\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nconst inputGroupButtonVariants = cva('text-sm shadow-none flex gap-2 items-center', {\r\n  variants: {\r\n    size: {\r\n      xs: \"h-6 gap-1 px-2 rounded-[calc(var(--radius)-5px)] [&>svg:not([class*='size-'])]:size-4 has-[>svg]:px-2\",\r\n      sm: 'h-8 px-3 gap-2 rounded-md has-[>svg]:px-3',\r\n      'icon-xs': 'size-6 rounded-[calc(var(--radius)-5px)] p-0 has-[>svg]:p-0',\r\n      'icon-sm': 'size-8 p-0 has-[>svg]:p-0',\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    size: 'xs',\r\n  },\r\n})\r\n\r\nexport interface InputGroupButtonProps\r\n  extends Omit<React.ComponentProps<typeof Button>, 'size'>,\r\n    VariantProps<typeof inputGroupButtonVariants> {}\r\n\r\nfunction InputGroupButton({\r\n  className,\r\n  type = 'button',\r\n  variant = 'ghost',\r\n  size = 'xs',\r\n  ...props\r\n}: InputGroupButtonProps) {\r\n  return (\r\n    <Button\r\n      type={type}\r\n      data-size={size}\r\n      variant={variant}\r\n      className={cn(inputGroupButtonVariants({ size }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface InputGroupTextProps extends React.ComponentProps<'span'> {}\r\n\r\nfunction InputGroupText({ className, ...props }: InputGroupTextProps) {\r\n  return (\r\n    <span\r\n      className={cn(\r\n        \"text-muted-foreground flex items-center gap-2 text-sm [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface InputGroupInputProps extends React.ComponentProps<typeof Input> {}\r\n\r\nfunction InputGroupInput({ className, ...props }: InputGroupInputProps) {\r\n  return (\r\n    <Input\r\n      data-slot=\"input-group-control\"\r\n      className={cn(\r\n        'flex-1 rounded-none border-0 bg-transparent shadow-none focus-visible:ring-0 dark:bg-transparent',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface InputGroupTextareaProps extends React.ComponentProps<typeof Textarea> {}\r\n\r\nfunction InputGroupTextarea({ className, ...props }: InputGroupTextareaProps) {\r\n  return (\r\n    <Textarea\r\n      data-slot=\"input-group-control\"\r\n      className={cn(\r\n        'flex-1 resize-none rounded-none border-0 bg-transparent py-3 shadow-none focus-visible:ring-0 dark:bg-transparent',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupButton,\r\n  InputGroupText,\r\n  InputGroupInput,\r\n  InputGroupTextarea,\r\n}\r\n",
      "type": "registry:ui"
    }
  ]
}
