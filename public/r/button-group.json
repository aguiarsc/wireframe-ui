{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button-group",
  "type": "registry:ui",
  "title": "Button Group",
  "description": "A button group component with wireframe helper for text labels.",
  "dependencies": ["@radix-ui/react-slot", "class-variance-authority"],
  "registryDependencies": ["separator", "text"],
  "files": [
    {
      "path": "registry/new-york/ui/button-group.tsx",
      "content": "import { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\nimport { Separator } from '@/registry/new-york/ui/separator'\nimport { Text } from '@/registry/new-york/ui/text'\n\nconst buttonGroupVariants = cva(\n  \"flex w-fit items-stretch [&>*]:focus-visible:z-10 [&>*]:focus-visible:relative [&>[data-slot=select-trigger]:not([class*='w-'])]:w-fit [&>input]:flex-1 has-[select[aria-hidden=true]:last-child]:[&>[data-slot=select-trigger]:last-of-type]:rounded-r-md has-[>[data-slot=button-group]]:gap-2\",\n  {\n    variants: {\n      orientation: {\n        horizontal:\n          '[&>*:not(:first-child)]:rounded-l-none [&>*:not(:first-child)]:border-l-0 [&>*:not(:last-child)]:rounded-r-none',\n        vertical:\n          'flex-col [&>*:not(:first-child)]:rounded-t-none [&>*:not(:first-child)]:border-t-0 [&>*:not(:last-child)]:rounded-b-none',\n      },\n    },\n    defaultVariants: {\n      orientation: 'horizontal',\n    },\n  }\n)\n\nexport interface ButtonGroupProps\n  extends React.ComponentProps<'div'>,\n    VariantProps<typeof buttonGroupVariants> {}\n\nfunction ButtonGroup({ className, orientation, ...props }: ButtonGroupProps) {\n  return (\n    <div\n      role=\"group\"\n      data-slot=\"button-group\"\n      data-orientation={orientation}\n      className={cn(buttonGroupVariants({ orientation }), className)}\n      {...props}\n    />\n  )\n}\n\nexport interface ButtonGroupTextProps extends React.ComponentProps<'div'> {\n  asChild?: boolean\n}\n\nfunction ButtonGroupText({ className, asChild = false, ...props }: ButtonGroupTextProps) {\n  const Comp = asChild ? Slot : 'div'\n\n  return (\n    <Comp\n      className={cn(\n        \"bg-muted flex items-center gap-2 rounded-md border px-4 text-sm font-medium shadow-xs [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport interface ButtonGroupSeparatorProps extends React.ComponentProps<typeof Separator> {}\n\nfunction ButtonGroupSeparator({\n  className,\n  orientation = 'vertical',\n  ...props\n}: ButtonGroupSeparatorProps) {\n  return (\n    <Separator\n      data-slot=\"button-group-separator\"\n      orientation={orientation}\n      className={cn(\n        'bg-input relative m-0! self-stretch data-[orientation=vertical]:h-auto',\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\n// Wireframe helper component\nfunction ButtonGroupTextWireframe({\n  width = 'sm',\n  className,\n  ...props\n}: Omit<React.ComponentProps<'div'>, 'children'> & {\n  width?: 'xs' | 'sm' | 'md' | 'lg'\n}) {\n  return (\n    <ButtonGroupText className={className} {...props}>\n      <Text width={width} size=\"sm\" />\n    </ButtonGroupText>\n  )\n}\n\nexport {\n  ButtonGroup,\n  ButtonGroupSeparator,\n  ButtonGroupText,\n  ButtonGroupTextWireframe,\n  buttonGroupVariants,\n}\n",
      "type": "registry:ui"
    }
  ]
}
