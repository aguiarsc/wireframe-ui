{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button-group",
  "type": "registry:ui",
  "title": "Button Group",
  "description": "A button group component with wireframe helper for text labels.",
  "dependencies": ["@radix-ui/react-slot", "class-variance-authority"],
  "registryDependencies": ["separator", "text"],
  "files": [
    {
      "path": "registry/new-york/ui/button-group.tsx",
      "content": "import { Slot } from '@radix-ui/react-slot'\r\nimport { cva, type VariantProps } from 'class-variance-authority'\r\n\r\nimport { cn } from '@/lib/utils'\r\nimport { Separator } from '@/registry/new-york/ui/separator'\r\nimport { Text } from '@/registry/new-york/ui/text'\r\n\r\nconst buttonGroupVariants = cva(\r\n  \"flex w-fit items-stretch [&>*]:focus-visible:z-10 [&>*]:focus-visible:relative [&>[data-slot=select-trigger]:not([class*='w-'])]:w-fit [&>input]:flex-1 has-[select[aria-hidden=true]:last-child]:[&>[data-slot=select-trigger]:last-of-type]:rounded-r-md has-[>[data-slot=button-group]]:gap-2\",\r\n  {\r\n    variants: {\r\n      orientation: {\r\n        horizontal:\r\n          '[&>*:not(:first-child)]:rounded-l-none [&>*:not(:first-child)]:border-l-0 [&>*:not(:last-child)]:rounded-r-none',\r\n        vertical:\r\n          'flex-col [&>*:not(:first-child)]:rounded-t-none [&>*:not(:first-child)]:border-t-0 [&>*:not(:last-child)]:rounded-b-none',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      orientation: 'horizontal',\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonGroupProps\r\n  extends React.ComponentProps<'div'>,\r\n    VariantProps<typeof buttonGroupVariants> {}\r\n\r\nfunction ButtonGroup({ className, orientation, ...props }: ButtonGroupProps) {\r\n  return (\r\n    <div\r\n      role=\"group\"\r\n      data-slot=\"button-group\"\r\n      data-orientation={orientation}\r\n      className={cn(buttonGroupVariants({ orientation }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface ButtonGroupTextProps extends React.ComponentProps<'div'> {\r\n  asChild?: boolean\r\n}\r\n\r\nfunction ButtonGroupText({ className, asChild = false, ...props }: ButtonGroupTextProps) {\r\n  const Comp = asChild ? Slot : 'div'\r\n\r\n  return (\r\n    <Comp\r\n      className={cn(\r\n        \"bg-muted flex items-center gap-2 rounded-md border px-4 text-sm font-medium shadow-xs [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface ButtonGroupSeparatorProps extends React.ComponentProps<typeof Separator> {}\r\n\r\nfunction ButtonGroupSeparator({\r\n  className,\r\n  orientation = 'vertical',\r\n  ...props\r\n}: ButtonGroupSeparatorProps) {\r\n  return (\r\n    <Separator\r\n      data-slot=\"button-group-separator\"\r\n      orientation={orientation}\r\n      className={cn(\r\n        'bg-input relative m-0! self-stretch data-[orientation=vertical]:h-auto',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\n// Wireframe helper component\r\nfunction ButtonGroupTextWireframe({\r\n  width = 'sm',\r\n  className,\r\n  ...props\r\n}: Omit<React.ComponentProps<'div'>, 'children'> & {\r\n  width?: 'xs' | 'sm' | 'md' | 'lg'\r\n}) {\r\n  return (\r\n    <ButtonGroupText className={className} {...props}>\r\n      <Text width={width} size=\"sm\" />\r\n    </ButtonGroupText>\r\n  )\r\n}\r\n\r\nexport {\r\n  ButtonGroup,\r\n  ButtonGroupSeparator,\r\n  ButtonGroupText,\r\n  ButtonGroupTextWireframe,\r\n  buttonGroupVariants,\r\n}\r\n",
      "type": "registry:ui"
    }
  ]
}
