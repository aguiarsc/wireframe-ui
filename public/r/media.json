{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "media",
  "type": "registry:ui",
  "title": "Media",
  "description": "A container for displaying images and videos with loading states and fallback placeholders.",
  "dependencies": [],
  "registryDependencies": ["icons"],
  "files": [
    {
      "path": "registry/new-york/ui/media.tsx",
      "content": "import * as React from 'react'\nimport { cn } from '@/lib/utils'\nimport { AudioLinesIcon, ClapIcon, GalleryThumbnailsIcon } from '@/registry/new-york/icons'\n\nexport interface MediaProps extends React.ComponentProps<'div'> {\n  src?: string\n  alt?: string\n  type?: 'image' | 'video' | 'audio'\n  aspectRatio?: 'square' | 'video' | 'portrait' | 'auto'\n  loading?: boolean\n  onLoad?: () => void\n  onError?: () => void\n}\n\nfunction Media({\n  src,\n  alt = 'Media',\n  type = 'image',\n  aspectRatio = 'video',\n  loading = false,\n  onLoad,\n  onError,\n  className,\n  ...props\n}: MediaProps) {\n  const [mediaLoaded, setMediaLoaded] = React.useState(false)\n  const [mediaError, setMediaError] = React.useState(false)\n  const showPlaceholder = loading || !src || mediaError || !mediaLoaded\n\n  const aspectRatioClasses = {\n    square: 'aspect-square',\n    video: 'aspect-video',\n    portrait: 'aspect-[3/4]',\n    auto: '',\n  }\n\n  const handleLoad = () => {\n    setMediaLoaded(true)\n    onLoad?.()\n  }\n\n  const handleError = () => {\n    setMediaError(true)\n    onError?.()\n  }\n\n  const ImageIcon = () => <GalleryThumbnailsIcon size={96} className=\"text-muted-foreground/30\" />\n\n  const VideoIcon = () => <ClapIcon size={96} className=\"text-muted-foreground/30\" />\n\n  const AudioIcon = () => <AudioLinesIcon size={96} className=\"text-muted-foreground/30\" />\n\n  return (\n    <div\n      data-slot=\"media\"\n      data-type={type}\n      className={cn(\n        'border-input bg-card relative overflow-hidden rounded-lg border',\n        aspectRatioClasses[aspectRatio],\n        className\n      )}\n      {...props}\n    >\n      {src && !mediaError && type === 'image' && (\n        <img\n          src={src}\n          alt={alt}\n          onLoad={handleLoad}\n          onError={handleError}\n          className={cn(\n            'size-full object-cover transition-opacity duration-300',\n            mediaLoaded ? 'opacity-100' : 'opacity-0'\n          )}\n        />\n      )}\n      {src && !mediaError && type === 'video' && (\n        <video\n          src={src}\n          onLoadedData={handleLoad}\n          onError={handleError}\n          controls\n          className={cn(\n            'size-full object-cover transition-opacity duration-300',\n            mediaLoaded ? 'opacity-100' : 'opacity-0'\n          )}\n        >\n          <track kind=\"captions\" />\n        </video>\n      )}\n      {src && !mediaError && type === 'audio' && (\n        <div className=\"bg-card absolute inset-0 flex items-center justify-center p-8\">\n          <audio\n            src={src}\n            onLoadedData={handleLoad}\n            onError={handleError}\n            controls\n            className={cn(\n              'w-full transition-opacity duration-300',\n              mediaLoaded ? 'opacity-100' : 'opacity-0'\n            )}\n          />\n        </div>\n      )}\n      {showPlaceholder && (\n        <div className=\"bg-card absolute inset-0 flex items-center justify-center\">\n          {type === 'image' ? <ImageIcon /> : type === 'video' ? <VideoIcon /> : <AudioIcon />}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport { Media }\n",
      "type": "registry:ui"
    }
  ]
}
