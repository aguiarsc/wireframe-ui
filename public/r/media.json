{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "media",
  "type": "registry:ui",
  "title": "Media",
  "description": "A container for displaying images and videos with loading states and fallback placeholders.",
  "dependencies": [
    "@heroicons/react"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/ui/media.tsx",
      "content": "import * as React from 'react'\r\nimport { cn } from '@/lib/utils'\r\nimport { MusicalNoteIcon, HandThumbUpIcon, PhotoIcon } from '@heroicons/react/24/outline'\r\n\r\nexport interface MediaProps extends React.ComponentProps<'div'> {\r\n  src?: string\r\n  alt?: string\r\n  type?: 'image' | 'video' | 'audio'\r\n  aspectRatio?: 'square' | 'video' | 'portrait' | 'auto'\r\n  loading?: boolean\r\n  onLoad?: () => void\r\n  onError?: () => void\r\n}\r\n\r\nfunction Media({\r\n  src,\r\n  alt = 'Media',\r\n  type = 'image',\r\n  aspectRatio = 'video',\r\n  loading = false,\r\n  onLoad,\r\n  onError,\r\n  className,\r\n  ...props\r\n}: MediaProps) {\r\n  const [mediaLoaded, setMediaLoaded] = React.useState(false)\r\n  const [mediaError, setMediaError] = React.useState(false)\r\n  const showPlaceholder = loading || !src || mediaError || !mediaLoaded\r\n\r\n  const aspectRatioClasses = {\r\n    square: 'aspect-square',\r\n    video: 'aspect-video',\r\n    portrait: 'aspect-[3/4]',\r\n    auto: '',\r\n  }\r\n\r\n  const handleLoad = () => {\r\n    setMediaLoaded(true)\r\n    onLoad?.()\r\n  }\r\n\r\n  const handleError = () => {\r\n    setMediaError(true)\r\n    onError?.()\r\n  }\r\n\r\n  const ImageIcon = () => <PhotoIcon className=\"size-12 text-muted-foreground/30\" />\r\n\r\n  const VideoIcon = () => <HandThumbUpIcon className=\"size-12 text-muted-foreground/30\" />\r\n\r\n  const AudioIcon = () => <MusicalNoteIcon className=\"size-12 text-muted-foreground/30\" />\r\n\r\n  return (\r\n    <div\r\n      data-slot=\"media\"\r\n      data-type={type}\r\n      className={cn(\r\n        'border-input bg-card relative overflow-hidden rounded-lg border',\r\n        aspectRatioClasses[aspectRatio],\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {src && !mediaError && type === 'image' && (\r\n        <img\r\n          src={src}\r\n          alt={alt}\r\n          onLoad={handleLoad}\r\n          onError={handleError}\r\n          className={cn(\r\n            'size-full object-cover transition-opacity duration-300',\r\n            mediaLoaded ? 'opacity-100' : 'opacity-0'\r\n          )}\r\n        />\r\n      )}\r\n      {src && !mediaError && type === 'video' && (\r\n        <video\r\n          src={src}\r\n          onLoadedData={handleLoad}\r\n          onError={handleError}\r\n          controls\r\n          className={cn(\r\n            'size-full object-cover transition-opacity duration-300',\r\n            mediaLoaded ? 'opacity-100' : 'opacity-0'\r\n          )}\r\n        >\r\n          <track kind=\"captions\" />\r\n        </video>\r\n      )}\r\n      {src && !mediaError && type === 'audio' && (\r\n        <div className=\"bg-card absolute inset-0 flex items-center justify-center p-8\">\r\n          <audio\r\n            src={src}\r\n            onLoadedData={handleLoad}\r\n            onError={handleError}\r\n            controls\r\n            className={cn(\r\n              'w-full transition-opacity duration-300',\r\n              mediaLoaded ? 'opacity-100' : 'opacity-0'\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n      {showPlaceholder && (\r\n        <div className=\"bg-card absolute inset-0 flex items-center justify-center\">\r\n          {type === 'image' ? <ImageIcon /> : type === 'video' ? <VideoIcon /> : <AudioIcon />}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Media }\r\n",
      "type": "registry:ui"
    }
  ]
}