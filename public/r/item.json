{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "item",
  "type": "registry:ui",
  "title": "Item",
  "description": "A flexible item component for lists with wireframe helpers for titles, descriptions, and media.",
  "dependencies": ["@radix-ui/react-slot", "class-variance-authority"],
  "registryDependencies": ["separator", "text", "icons"],
  "files": [
    {
      "path": "registry/new-york/ui/item.tsx",
      "content": "import * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\nimport { Separator } from '@/registry/new-york/ui/separator'\nimport { Text } from '@/registry/new-york/ui/text'\n\nexport interface ItemGroupProps extends React.ComponentProps<'div'> {}\n\nfunction ItemGroup({ className, ...props }: ItemGroupProps) {\n  return (\n    <div\n      role=\"list\"\n      data-slot=\"item-group\"\n      className={cn('group/item-group flex flex-col', className)}\n      {...props}\n    />\n  )\n}\n\nexport interface ItemSeparatorProps extends React.ComponentProps<typeof Separator> {}\n\nfunction ItemSeparator({ className, ...props }: ItemSeparatorProps) {\n  return (\n    <Separator\n      data-slot=\"item-separator\"\n      orientation=\"horizontal\"\n      className={cn('my-0', className)}\n      {...props}\n    />\n  )\n}\n\nconst itemVariants = cva(\n  'group/item flex items-center border border-transparent text-sm rounded-md transition-colors [a]:hover:bg-accent/50 [a]:transition-colors duration-100 flex-wrap outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]',\n  {\n    variants: {\n      variant: {\n        default: 'bg-transparent',\n        outline: 'border-border',\n        muted: 'bg-muted/50',\n      },\n      size: {\n        default: 'p-4 gap-4 ',\n        sm: 'py-3 px-4 gap-2.5',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  }\n)\n\nexport interface ItemProps extends React.ComponentProps<'div'>, VariantProps<typeof itemVariants> {\n  asChild?: boolean\n}\n\nfunction Item({\n  className,\n  variant = 'default',\n  size = 'default',\n  asChild = false,\n  ...props\n}: ItemProps) {\n  const Comp = asChild ? Slot : 'div'\n  return (\n    <Comp\n      data-slot=\"item\"\n      data-variant={variant}\n      data-size={size}\n      className={cn(itemVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nconst itemMediaVariants = cva(\n  'flex shrink-0 items-center justify-center gap-2 group-has-[[data-slot=item-description]]/item:self-start [&_svg]:pointer-events-none group-has-[[data-slot=item-description]]/item:translate-y-0.5',\n  {\n    variants: {\n      variant: {\n        default: 'bg-transparent',\n        icon: \"size-8 border rounded-sm bg-muted [&_svg:not([class*='size-'])]:size-4\",\n        image: 'size-10 rounded-sm overflow-hidden [&_img]:size-full [&_img]:object-cover',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n)\n\nexport interface ItemMediaProps\n  extends React.ComponentProps<'div'>,\n    VariantProps<typeof itemMediaVariants> {}\n\nfunction ItemMedia({ className, variant = 'default', ...props }: ItemMediaProps) {\n  return (\n    <div\n      data-slot=\"item-media\"\n      data-variant={variant}\n      className={cn(itemMediaVariants({ variant, className }))}\n      {...props}\n    />\n  )\n}\n\nexport interface ItemContentProps extends React.ComponentProps<'div'> {}\n\nfunction ItemContent({ className, ...props }: ItemContentProps) {\n  return (\n    <div\n      data-slot=\"item-content\"\n      className={cn('flex flex-1 flex-col gap-1 [&+[data-slot=item-content]]:flex-none', className)}\n      {...props}\n    />\n  )\n}\n\nexport interface ItemTitleProps extends React.ComponentProps<'div'> {}\n\nfunction ItemTitle({ className, ...props }: ItemTitleProps) {\n  return (\n    <div\n      data-slot=\"item-title\"\n      className={cn('flex w-fit items-center gap-2 text-sm leading-snug font-medium', className)}\n      {...props}\n    />\n  )\n}\n\nexport interface ItemDescriptionProps extends React.ComponentProps<'p'> {}\n\nfunction ItemDescription({ className, ...props }: ItemDescriptionProps) {\n  return (\n    <p\n      data-slot=\"item-description\"\n      className={cn(\n        'text-muted-foreground line-clamp-2 text-sm leading-normal font-normal text-balance',\n        '[&>a:hover]:text-primary [&>a]:underline [&>a]:underline-offset-4',\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport interface ItemActionsProps extends React.ComponentProps<'div'> {}\n\nfunction ItemActions({ className, ...props }: ItemActionsProps) {\n  return (\n    <div data-slot=\"item-actions\" className={cn('flex items-center gap-2', className)} {...props} />\n  )\n}\n\nexport interface ItemHeaderProps extends React.ComponentProps<'div'> {}\n\nfunction ItemHeader({ className, ...props }: ItemHeaderProps) {\n  return (\n    <div\n      data-slot=\"item-header\"\n      className={cn('flex basis-full items-center justify-between gap-2', className)}\n      {...props}\n    />\n  )\n}\n\nexport interface ItemFooterProps extends React.ComponentProps<'div'> {}\n\nfunction ItemFooter({ className, ...props }: ItemFooterProps) {\n  return (\n    <div\n      data-slot=\"item-footer\"\n      className={cn('flex basis-full items-center justify-between gap-2', className)}\n      {...props}\n    />\n  )\n}\n\n// Wireframe helper components\nfunction ItemTitleWireframe({\n  width = 'md',\n  className,\n  ...props\n}: Omit<React.ComponentProps<'div'>, 'children'> & {\n  width?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'full'\n}) {\n  return (\n    <ItemTitle className={className} {...props}>\n      <Text width={width} emphasis=\"primary\" />\n    </ItemTitle>\n  )\n}\n\nfunction ItemDescriptionWireframe({\n  width = 'lg',\n  className,\n  ...props\n}: Omit<React.ComponentProps<'p'>, 'children'> & {\n  width?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'full'\n}) {\n  return (\n    <ItemDescription className={className} {...props}>\n      <Text width={width} color=\"muted\" />\n    </ItemDescription>\n  )\n}\n\nfunction ItemMediaWireframe({\n  variant = 'icon',\n  className,\n  ...props\n}: Omit<React.ComponentProps<'div'>, 'children'> & VariantProps<typeof itemMediaVariants>) {\n  return (\n    <ItemMedia variant={variant} className={className} {...props}>\n      {variant === 'icon' && <div className=\"wireframe-block size-4\" />}\n      {variant === 'image' && <div className=\"wireframe-block size-full\" />}\n    </ItemMedia>\n  )\n}\n\nexport {\n  Item,\n  ItemMedia,\n  ItemContent,\n  ItemActions,\n  ItemGroup,\n  ItemSeparator,\n  ItemTitle,\n  ItemDescription,\n  ItemHeader,\n  ItemFooter,\n  ItemTitleWireframe,\n  ItemDescriptionWireframe,\n  ItemMediaWireframe,\n}\n",
      "type": "registry:ui"
    }
  ]
}
