{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "item",
  "type": "registry:ui",
  "title": "Item",
  "description": "A flexible item component for lists with wireframe helpers for titles, descriptions, and media.",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "@heroicons/react"
  ],
  "registryDependencies": [
    "separator",
    "text"
  ],
  "files": [
    {
      "path": "registry/new-york/ui/item.tsx",
      "content": "import * as React from 'react'\r\nimport { Slot } from '@radix-ui/react-slot'\r\nimport { cva, type VariantProps } from 'class-variance-authority'\r\nimport { MusicalNoteIcon } from '@heroicons/react/24/outline'\r\n\r\nimport { cn } from '@/lib/utils'\r\nimport { Separator } from '@/registry/new-york/ui/separator'\r\nimport { Text } from '@/registry/new-york/ui/text'\r\n\r\nexport interface ItemGroupProps extends React.ComponentProps<'div'> {}\r\n\r\nfunction ItemGroup({ className, ...props }: ItemGroupProps) {\r\n  return (\r\n    <div\r\n      role=\"list\"\r\n      data-slot=\"item-group\"\r\n      className={cn('group/item-group flex flex-col', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface ItemSeparatorProps extends React.ComponentProps<typeof Separator> {}\r\n\r\nfunction ItemSeparator({ className, ...props }: ItemSeparatorProps) {\r\n  return (\r\n    <Separator\r\n      data-slot=\"item-separator\"\r\n      orientation=\"horizontal\"\r\n      className={cn('my-0', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nconst itemVariants = cva(\r\n  'group/item flex items-center border border-transparent text-sm rounded-md transition-colors [a]:hover:bg-accent/50 [a]:transition-colors duration-100 flex-wrap outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: 'bg-transparent',\r\n        outline: 'border-border',\r\n        muted: 'bg-muted/50',\r\n      },\r\n      size: {\r\n        default: 'p-4 gap-4 ',\r\n        sm: 'py-3 px-4 gap-3',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n      size: 'default',\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ItemProps extends React.ComponentProps<'div'>, VariantProps<typeof itemVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nfunction Item({\r\n  className,\r\n  variant = 'default',\r\n  size = 'default',\r\n  asChild = false,\r\n  ...props\r\n}: ItemProps) {\r\n  const Comp = asChild ? Slot : 'div'\r\n  return (\r\n    <Comp\r\n      data-slot=\"item\"\r\n      data-variant={variant}\r\n      data-size={size}\r\n      className={cn(itemVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nconst itemMediaVariants = cva(\r\n  'flex shrink-0 items-center justify-center gap-2 group-has-[[data-slot=item-description]]/item:self-start [&_svg]:pointer-events-none group-has-[[data-slot=item-description]]/item:translate-y-0.5',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: 'bg-transparent',\r\n        icon: \"size-8 border rounded-sm bg-muted [&_svg:not([class*='size-'])]:size-4\",\r\n        image: 'size-10 rounded-sm overflow-hidden [&_img]:size-full [&_img]:object-cover',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ItemMediaProps\r\n  extends React.ComponentProps<'div'>,\r\n    VariantProps<typeof itemMediaVariants> {}\r\n\r\nfunction ItemMedia({ className, variant = 'default', ...props }: ItemMediaProps) {\r\n  return (\r\n    <div\r\n      data-slot=\"item-media\"\r\n      data-variant={variant}\r\n      className={cn(itemMediaVariants({ variant, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface ItemContentProps extends React.ComponentProps<'div'> {}\r\n\r\nfunction ItemContent({ className, ...props }: ItemContentProps) {\r\n  return (\r\n    <div\r\n      data-slot=\"item-content\"\r\n      className={cn('flex flex-1 flex-col gap-1 [&+[data-slot=item-content]]:flex-none', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface ItemTitleProps extends React.ComponentProps<'div'> {}\r\n\r\nfunction ItemTitle({ className, ...props }: ItemTitleProps) {\r\n  return (\r\n    <div\r\n      data-slot=\"item-title\"\r\n      className={cn('flex w-fit items-center gap-2 text-sm leading-snug font-medium', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface ItemDescriptionProps extends React.ComponentProps<'p'> {}\r\n\r\nfunction ItemDescription({ className, ...props }: ItemDescriptionProps) {\r\n  return (\r\n    <p\r\n      data-slot=\"item-description\"\r\n      className={cn(\r\n        'text-muted-foreground line-clamp-2 text-sm leading-normal font-normal text-balance',\r\n        '[&>a:hover]:text-primary [&>a]:underline [&>a]:underline-offset-4',\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface ItemActionsProps extends React.ComponentProps<'div'> {}\r\n\r\nfunction ItemActions({ className, ...props }: ItemActionsProps) {\r\n  return (\r\n    <div data-slot=\"item-actions\" className={cn('flex items-center gap-2', className)} {...props} />\r\n  )\r\n}\r\n\r\nexport interface ItemHeaderProps extends React.ComponentProps<'div'> {}\r\n\r\nfunction ItemHeader({ className, ...props }: ItemHeaderProps) {\r\n  return (\r\n    <div\r\n      data-slot=\"item-header\"\r\n      className={cn('flex basis-full items-center justify-between gap-2', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface ItemFooterProps extends React.ComponentProps<'div'> {}\r\n\r\nfunction ItemFooter({ className, ...props }: ItemFooterProps) {\r\n  return (\r\n    <div\r\n      data-slot=\"item-footer\"\r\n      className={cn('flex basis-full items-center justify-between gap-2', className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\n// Wireframe helper components\r\nfunction ItemTitleWireframe({\r\n  width = 'md',\r\n  className,\r\n  ...props\r\n}: Omit<React.ComponentProps<'div'>, 'children'> & {\r\n  width?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'full'\r\n}) {\r\n  return (\r\n    <ItemTitle className={className} {...props}>\r\n      <Text width={width} emphasis=\"primary\" />\r\n    </ItemTitle>\r\n  )\r\n}\r\n\r\nfunction ItemDescriptionWireframe({\r\n  width = 'lg',\r\n  className,\r\n  ...props\r\n}: Omit<React.ComponentProps<'p'>, 'children'> & {\r\n  width?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'full'\r\n}) {\r\n  return (\r\n    <ItemDescription className={className} {...props}>\r\n      <Text width={width} color=\"muted\" />\r\n    </ItemDescription>\r\n  )\r\n}\r\n\r\nfunction ItemMediaWireframe({\r\n  variant = 'image',\r\n  className,\r\n  children,\r\n  ...props\r\n}: React.ComponentProps<'div'> & VariantProps<typeof itemMediaVariants>) {\r\n  return (\r\n    <ItemMedia variant={variant} className={className} {...props}>\r\n      {children || (\r\n        <>\r\n          {variant === 'icon' && <div className=\"wireframe-block size-4\" />}\r\n          {variant === 'image' && <MusicalNoteIcon className=\"size-6 text-muted-foreground\" />}\r\n        </>\r\n      )}\r\n    </ItemMedia>\r\n  )\r\n}\r\n\r\nexport {\r\n  Item,\r\n  ItemMedia,\r\n  ItemContent,\r\n  ItemActions,\r\n  ItemGroup,\r\n  ItemSeparator,\r\n  ItemTitle,\r\n  ItemDescription,\r\n  ItemHeader,\r\n  ItemFooter,\r\n  ItemTitleWireframe,\r\n  ItemDescriptionWireframe,\r\n  ItemMediaWireframe,\r\n}\r\n",
      "type": "registry:ui"
    }
  ]
}