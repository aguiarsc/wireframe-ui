{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "tooltip",
  "type": "registry:ui",
  "title": "Tooltip",
  "description": "A popup that displays information related to an element when focused or hovered.",
  "dependencies": ["@radix-ui/react-tooltip", "@heroicons/react"],
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/ui/tooltip.tsx",
      "content": "'use client'\r\n\r\nimport * as React from 'react'\r\nimport * as TooltipPrimitive from '@radix-ui/react-tooltip'\r\n\r\nimport { cn } from '@/lib/utils'\r\nimport { QuestionMarkCircleIcon } from '@heroicons/react/24/outline'\r\nimport { Button } from '@/registry/new-york/ui/button'\r\nimport { Text } from '@/registry/new-york/ui/text'\r\n\r\nexport interface TooltipProviderProps\r\n  extends React.ComponentProps<typeof TooltipPrimitive.Provider> {}\r\n\r\nfunction TooltipProvider({ delayDuration = 0, ...props }: TooltipProviderProps) {\r\n  return (\r\n    <TooltipPrimitive.Provider\r\n      data-slot=\"tooltip-provider\"\r\n      delayDuration={delayDuration}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport interface TooltipProps extends React.ComponentProps<typeof TooltipPrimitive.Root> {}\r\n\r\nfunction Tooltip({ ...props }: TooltipProps) {\r\n  return (\r\n    <TooltipProvider>\r\n      <TooltipPrimitive.Root data-slot=\"tooltip\" {...props} />\r\n    </TooltipProvider>\r\n  )\r\n}\r\n\r\nexport interface TooltipTriggerProps\r\n  extends React.ComponentProps<typeof TooltipPrimitive.Trigger> {}\r\n\r\nfunction TooltipTrigger({ ...props }: TooltipTriggerProps) {\r\n  return <TooltipPrimitive.Trigger data-slot=\"tooltip-trigger\" {...props} />\r\n}\r\n\r\nexport interface TooltipContentProps\r\n  extends React.ComponentProps<typeof TooltipPrimitive.Content> {}\r\n\r\nfunction TooltipContent({ className, sideOffset = 0, children, ...props }: TooltipContentProps) {\r\n  return (\r\n    <TooltipPrimitive.Portal>\r\n      <TooltipPrimitive.Content\r\n        data-slot=\"tooltip-content\"\r\n        sideOffset={sideOffset}\r\n        className={cn(\r\n          'bg-foreground text-background animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-fit origin-(--radix-tooltip-content-transform-origin) rounded-md px-3 py-1.5 text-xs text-balance',\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n        <TooltipPrimitive.Arrow className=\"bg-foreground fill-foreground z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]\" />\r\n      </TooltipPrimitive.Content>\r\n    </TooltipPrimitive.Portal>\r\n  )\r\n}\r\n\r\n// Wireframe helper component\r\nexport interface TooltipWireframeExampleProps {\r\n  triggerIcon?: React.ReactNode\r\n  contentWidth?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'\r\n}\r\n\r\nfunction TooltipWireframeExample({\r\n  triggerIcon,\r\n  contentWidth = 'sm',\r\n}: TooltipWireframeExampleProps) {\r\n  return (\r\n    <Tooltip>\r\n      <TooltipTrigger asChild>\r\n        <Button variant=\"outline\">\r\n          {triggerIcon || <QuestionMarkCircleIcon className=\"size-5 text-muted-foreground\" />}\r\n          <Text width=\"xs\" />\r\n        </Button>\r\n      </TooltipTrigger>\r\n      <TooltipContent>\r\n        <Text width={contentWidth} className=\"bg-background/30\" />\r\n      </TooltipContent>\r\n    </Tooltip>\r\n  )\r\n}\r\n\r\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider, TooltipWireframeExample }\r\n",
      "type": "registry:ui"
    }
  ]
}
